<head>
  <title>Editor de reporte diario</title>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Instituto Nacional del Agua (INA) - Subgerencia Laboratorio de Hidrología</title>
  <meta name="description"
    content="Es un organismo científico tecnológico descentralizado que tiene por objetivo satisfacer los requerimientos de estudio,    investigación, desarrollo y prestación de servicios especializados en el campo del aprovechamiento y preservación del agua.    Depende de la Secretaría de Infraestructura y Política Hídrica de la Nación,    del [Ministerio de Obras Públicas](https://www.argentina.gob.ar/obras-publicas) de la República Argentina.">
  <meta name="keywords"
    content="instituto nacional del agua, INA, ina, subsecretaria de recursos hidricos, laboratorio de hidraulica,    direccion de servicios hidrologicos, centro de tecnologia del uso del agua, centro regional litoral, crl, centro de la region semiarida, cirsa,    centro de economia legislacion y administracion del agua, cela, subgerencia laboratorio de calidad de aguas, subgerencia hidrologia aplicada, delta parana, inundaciones urbanas, productos de emergencia, analisis de agua, alerta hidrologico, monitoreo rio parana,   cuenca del plata, investigaciones en riego y drenaje, calidad de aguas, canal de panama, hidraulica, ingenieria hidraulica, hidrologia superficial,    hidrologia subterranea, programa de investigaciones en hidroquimica, red hidrometeorologica, area pedemontana gran mendoza,   calidad de aguas e impacto ambiental">
  <meta name="author" content="Instituto Nacional del Agua">
  <link rel="shortcut icon" href="https://www.ina.gov.ar/img/favicon.ico">
  <!-- Nav and address bar color -->
  <meta name="theme-color" content="#0072b8">
  <meta name="msapplication-navbutton-color" content="#0072b8">
  <meta name="apple-mobile-web-app-status-bar-style" content="#0072b8">
  <meta property="og:url" content="https://www.argentina.gob.ar/ina/">
  <meta property="og:type" content="article">
  <meta property="og:title" content="Instituto Nacional del Agua (INA) - Subgerencia Laboratorio de Hidrología">
  <meta property="og:description"
    content="Es un organismo científico tecnológico descentralizado que tiene por objetivo satisfacer los requerimientos de estudio,    investigación, desarrollo y prestación de servicios especializados en el campo del aprovechamiento y preservación del agua.    Depende de la Secretaría de Infraestructura y Política Hídrica de la Nación,    del [Ministerio de Obras Públicas](https://www.argentina.gob.ar/obras-publicas) de la República Argentina.">
  <meta property="og:image" content="https://www.ina.gob.ar/img/Logo_ina_chico.png">
  <meta property="og:locale" content="es_AR">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="Instituto Nacional del Agua (INA) - Subgerencia Laboratorio de Hidrología">
  <meta name="twitter:description"
    content="Es un organismo científico tecnológico descentralizado que tiene por objetivo satisfacer los requerimientos de estudio,    investigación, desarrollo y prestación de servicios especializados en el campo del aprovechamiento y preservación del agua.    Depende de la Secretaría de Infraestructura y Política Hídrica de la Nación,    del [Ministerio de Obras Públicas](https://www.argentina.gob.ar/obras-publicas) de la República Argentina.">
  <meta name="twitter:image" content="https://www.ina.gob.ar/img/Logo_ina_chico.png">
  <link rel="stylesheet" href="styles/bootstrap.min.css"
    integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">
  <link rel="stylesheet" href="styles/font-awesome.min.css">
  <link rel="stylesheet" href="styles/poncho.min.css">
  <!-- <link rel="stylesheet" href="/poncho/dist/css/argentina.css"> -->
  <link rel="stylesheet" href="styles/icono-arg.css">
  <link rel="stylesheet" href="styles/ina.css">
  <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
  <!--[if lt IE 9]>
          <script src="http://argob.github.io/poncho/js/html5shiv.js"></script>
          <script src="http://argob.github.io/poncho/js/respond.min.js"></script>
      <![endif]-->
  <script src="js/jquery.min.js"></script>
  <script src="js/bootstrap.min.js"
    integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd"
    crossorigin="anonymous"></script>
  <link href="styles/owl.carousel.css" type="text/css" rel="stylesheet" media="screen">
  <script src="js/owl.carousel.min.js" type="text/javascript"></script>
  <script src="https://unpkg.com/prettier@3.2.5/standalone.js"></script>
  <script src="https://unpkg.com/prettier@3.2.5/parser-html.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link class="jsbin" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css" rel="stylesheet" type="text/css" />
  <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
  <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.min.js" integrity="sha256-AlTido85uXPlSyyaZNsjJXeCs07eSv3r43kyCVc8ChI=" crossorigin="anonymous"></script>  
  <link rel="stylesheet" href="styles/richtext.min.css" type="text/css">
  <script class="jsbin" src="js/jquery.richtext.min.js" type="application/javascript"></script>
  <link rel="stylesheet" href="my_styles/reporte.css" type="text/css">
  <style>
    /* #editor, div.richText {  */
      /* width: 794px;  */
      /* height: 500px;  */
      /* margin: 0 auto;
      padding: 40px;
      background: white;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
      box-sizing: border-box;
      flex: 1;
      overflow-y: auto;     Scrollable content */

    /* } */

    .button {
      margin-top: 10px; 
    }
    #html-view { 
      display:none;
      width: 794px; 
      /* width:100%;  */
      height:500px; 
    }
    .ql-toolbar button {
      background: none;
      border: none;
      cursor: pointer;
      display: inline-block;
      float: left;
      height: 24px;
      padding: 3px 5px;
      width: 28px;
    }
    .ql-toolbar button svg {
      float: left;
      height: 100%;
    }
    .ql-toolbar button:active:hover {
      outline: none;
    }

    .custom-button {
      padding: 4px 10px;
      background-color: #DEE2E6;
      color: white;
      border-radius: 5px;
      cursor: pointer;
      font-size: 1rem;
      margin-top: 10px;
      font-weight: 500;
    }
  </style>
</head>
<body>
  <div id="screen-blocker" class="position-fixed top-0 start-0 w-100 h-100 bg-light bg-opacity-50" 
     style="z-index: 1055; display: none; cursor: wait; position: fixed; top: 0; width: 100%; height: 100%; opacity: 50;"></div>
  <div>
    <h1>Editar reporte diario</h1>
    <div style="display: grid; place-items: center;">
      <!-- <button id="toggleView">Cambiar a vista de código</button> -->
      <div id="editor_container">
        <textarea id="editor"></textarea>
      </div>
      <div>
        <span>
          <button class="button" id=load-template-button onclick="startFromTemplate()">Cargar plantilla</button>
        </span>
        <span>
          <button class="button" id=load-published-button onclick="loadPublished()">Cargar publicado</button>
        </span>
        <span>
          <label for="fileInput" class="custom-button">Cargar archivo HTML</label>
          <input type="file" id="fileInput" accept=".html" style="display: none;">
        </span>
        <span>
          <button class="button" id=save-draft-button onclick="loadDraft()">Cargar borrador</button>
        </span>
        <span>
          <button class="button" id=save-draft-button onclick="saveDraft()">Guardar borrador</button>
        </span>
        <span>
          <button class="button" onclick="saveAsHtml()" id="dwnld-button">Descargar</button>
        </span>
        <span>
          <button class="button" id=publish-button onclick="saveDraftAndPublish()">Guardar y publicar</button>
        </span>
        <span>
          <a href="reporte_diario" target="_blank">Ver</a>
        </span>
      </div>
    </div>
  </div>
  <!-- blocking overlay -->
  <script>

    $("textarea#editor").richText()

    async function loadContent(content_path) {
      // Load existing content
      const blocker = document.getElementById('screen-blocker');
      blocker.style.display = 'block';
      try {
        const response = await fetch(content_path)
        if(!response.ok) {
          const error_text = await response.text()
          alert(error_text)
          throw new Error(`HTTP ${response.status} - ${response.statusText}: ${error_text}`);
        }
        const response_text = await response.text()
        $("textarea#editor").val(response_text).trigger("change")
        await new Promise(requestAnimationFrame);
        await new Promise(requestAnimationFrame);
      } catch (error) {
        alert('Falló la carga de contenido: ' + error.message)
        console.error('Falló la carga de contenido', error.message);
      } finally {
        blocker.style.display = 'none'; // re-enable interaction
      }
    }

    // load draft
    loadDraft()
    // const toggleBtn = document.getElementById('toggleView');
    const htmlView = document.getElementById('html-view');
    const editorContainer = document.getElementById('editor');

    let codeView = false;

    async function saveDraftAndPublish() {
      await saveDraft()
      publish()
    }

      // Save content
    async function publish() {
      const html = $("textarea#editor").val();
      return fetch('publish', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ html })
      }).then(res => res.text()).then(alert).catch(alert);
    }

    async function saveDraft() {
      const html = $("textarea#editor").val();
      return fetch('draft', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ html })
      }).then(res => res.text()).then(alert).catch(alert);
    }

    function saveAsHtml() {
      const content = document.getElementById("editor").value;
      const blob = new Blob([content], { type: "text/html" });
      const url = URL.createObjectURL(blob);

      const a = document.createElement("a");
      a.href = url;
      a.download = "saved.html";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    }

    // new from template
    function startFromTemplate() {
      loadContent("template")
    }

    function loadDraft() {
      loadContent("draft.html")
    }

    function loadPublished() {
      loadContent("saved.html")
    }

    function addToolbarButton() {
      setTimeout(function () {
        // Append custom button to toolbar
            const alertaButton = `
              <li class="alerta-icon-btn">
                <a href="#" title="Insertar ícono alerta">
                  <i class="fa fa-exclamation-triangle" aria-hidden="true" style="color: yellow !important;"></i>
                </a>
              </li>
            `;

            $('.richText .richText-toolbar ul').append(alertaButton);

            const evacuacionButton = `
              <li class="evacuacion-icon-btn">
                <a href="#" title="Insertar ícono alerta">
                  <i class="fa fa-exclamation-triangle" aria-hidden="true" style="color: red !important;"></i>
                </a>
              </li>
            `;

        $('.richText .richText-toolbar ul').append(evacuacionButton);

        // Insert icon on click
        $('.alerta-icon-btn').on('click', function (e) {
          e.preventDefault();

          const iconHtml = '<i class="fa fa-exclamation-triangle" aria-hidden="true" style="color: yellow !important;"></i>';

          // Insert HTML at caret position
          const editor = $('.richText-editor');
          document.execCommand('insertHTML', false, iconHtml);
        });

        $('.evacuacion-icon-btn').on('click', function (e) {
          e.preventDefault();

          const iconHtml = '<i class="fa fa-exclamation-triangle" aria-hidden="true" style="color: red !important;"></i>';

          // Insert HTML at caret position
          const editor = $('.richText-editor');
          document.execCommand('insertHTML', false, iconHtml);
        });

      }, 500); // Give it time to initialize

    }
    
    $(document).ready(function() {
      addToolbarButton()
    });

    document.getElementById("fileInput").addEventListener("change", function() {
      const file = this.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = async function(e) {
        // document.getElementById("editor").value = e.target.result;
        $("textarea#editor").val(e.target.result).trigger("change")
        await new Promise(requestAnimationFrame);
        await new Promise(requestAnimationFrame);
      };
      reader.readAsText(file);
    });

    // function htmlStringToDOM(html) {
    //   return new DOMParser().parseFromString(html, 'text/html').body;
    // }

    // function tableToCSV(table, sep=',',linebreak='<br>') {
    //   const rows = Array.from(table.querySelectorAll('tr'));
    //   return rows.map(row => {
    //     const cells = Array.from(row.querySelectorAll('th, td'));
    //     return cells.map(cell => `${cell.textContent.replace(/"/g, '""')}`).join(sep);
    //   }).join(linebreak);
    // }

    // function replaceElements(dom, selector, replacer) {
    //   const elements = dom.querySelectorAll(selector);
    //   elements.forEach(el => {
    //     const replacement = replacer(el);
    //     if (replacement instanceof Node) {
    //       el.replaceWith(replacement);
    //     }
    //   });
    // }

    // function convertTablesToP(html) {
    //   const dom = htmlStringToDOM(html)
    //   // const tables = dom.getElementsByTagName("table")
    //   replaceElements(dom, "table", table => {
    //     const div = document.createElement('div');
    //     div.classList.add("csv-table")
    //     div.innerHTML = tableToCSV(table,";")
    //     return div
    //   })
    //   return dom.innerHTML
    // }



  </script>
</body>
